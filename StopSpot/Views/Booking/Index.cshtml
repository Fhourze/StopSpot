@model Booking;

@{
    ViewData["Title"] = "Booking";
}

<link rel="stylesheet" href="~/css/bookingDesign.css" asp-append-version="true" />

<!DOCTYPE html>
<body class="bookingBody">
    <h1>Booking</h1>

    <div class="row">
        <div class="col">
            <form asp-action="">
            <form asp-action="Index" method="post">
                <div asp-validation-summary="All"></div>
                <!--<div class="mb-3">
                    <label asp-for="BookingId" class="form-label">Booking ID</label>
                    <input asp-for="BookingId" class="form-control" />
                </div>-->
                <div class="row mb-3">
                    <!--<label asp-for="ParkingSpot" class="form-label"></label>-->
                    <!--<select asp-for="ParkingSpot" class="form-select" asp-items="Html.GetEnumSelectList<Spots>()" aria-label="Spots"></select>-->
                    <label asp-for="ParkingSpot" class="form-label"></label>
                    @Html.DropDownListFor(model => model.ParkingSpot, new SelectList(ViewBag.spots, "Id", "Name"),
                    new { @class = "booking-dropdown", @onchange = "imgChoiceFunction()", @id = "bookDropdown" })
                    @Html.Hidden("myVar", 0);

                </div>
                <div class="row mb-3">
                    <div class="col">
                        <label asp-for="ParkingFrom" class="form-label"></label>
                        <input asp-for="ParkingFrom" class="form-control" placeholder="PARKING FROM" id="parkFrom">
                    </div>

            </div>
                    <div class="col">
                        <label asp-for="ParkingUntil" class="form-label"></label>
                        <input asp-for="ParkingUntil" class="form-control" placeholder="PARKING UNTIL" id="parkUntil" onchange="dateChoiceFunction()">
                    </div>
                </div>
                <div class="mb-3">
                    <div class="col">
                        <label asp-for="Total" class="form-label"></label>
                        <input asp-for="Total" type="number" class="form-control" placeholder="TOTAL" id="parkTotal" readonly>
                    </div>
                </div>

                <button type="submit" class="btn btn-danger" id="bBooking">PARK IT!</button>

            </form>
        </div>
        <div class="col">
            <div class="row mb-3">
                <img src="../img/ParkingPlaceholder.png" alt="Parking Spot Picture" id="parkingImage">
                <p id="test"></p>

            </div>
        </div>

    </div>
    <script>
        function imgChoiceFunction() {
            var imageFilename = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.spotsPicture))');
            //document.getElementById("parkingImage").src = "../img" + imageNum + ".png";
            document.getElementById("parkingImage").src = "../" + imageFilename[imageNum]; //uncomment this when file upload finally works
            document.getElementById("parkFrom").value = "";
            document.getElementById("parkUntil").value = "";
            document.getElementById("parkTotal").value = "";

        }

        function dateChoiceFunction() {
            var spotNum = document.getElementById("bookDropdown").selectedIndex;
            var spotNumVal = document.getElementById("bookDropdown").value;

            var dateTilChoice = document.getElementById("parkUntil").value;
            var dateFromChoice = document.getElementById("parkFrom").value;

            var fromDate = Date.parse(dateFromChoice);
            var toDate = Date.parse(dateTilChoice);
            var bookRange = [];

            var bookFromArray = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.bookFrom))');
            var bookUntilArray = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.bookUntil))');

            //var bookedDatabase = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.bookedSpots))');

            var parsedFrom = parseArray(bookFromArray);
            var parsedUntil = parseArray(bookUntilArray);

            if (toDate > fromDate) {

                var overlapCheckerNum = 0;
                for (var i = fromDate; i <= toDate; i++) {
                    bookRange.push(i);
                }

                //// never modify the for loop below
                for (var j = 0; j < parsedFrom.length; j++) {
                    //for (var k = parsedFrom[j]; k <= parsedUntil[j]; k++) {
                    //unavailableRange.push(k); <----- cause of the problem. Possible solutions; 1. Map(), 2. try making a function and call that (gets rid of nested loop)

                    //S}
                    //bookedDatabaseRange.push(getRange(parsedFrom[j], parsedUntil[j]));
                    //unavailableRange = [];
                    var overlapChecker = bookRange.filter(function (item) {
                        return (item >= parsedFrom[j] && item <= parsedUntil[j]);
                    });

                    overlapCheckerNum = overlapCheckerNum + overlapChecker.length

                }

                if (overlapCheckerNum == 0) {
                    var dateDiff = toDate - fromDate;
                    var parkHour = dateDiff / 3600000; //3600000 is 1 hour

                    var spotPriceArray = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.spotsPrice))');
                    var spotPrice = spotPriceArray[spotNum];
                    var pricePerHour = spotPrice * parkHour;

                    document.getElementById("parkTotal").value = pricePerHour;
            } else {
                document.getElementById("parkUntil").value = "";
                document.getElementById("parkTotal").value = "";
                alert("Ending date of booking must not precede the starting date. Try again or input the starting date first.");
            }

        }

        function parseArray(arrayToBeParsed) {
            var parsedArray = [];
            for (var i = 0; i < arrayToBeParsed.length; i++) {
                var parsedDate = Date.parse(arrayToBeParsed[i]);
                parsedArray.push(parsedDate);
            }

            return parsedArray;
        }



    </script>

</body>