@model StopSpot.Models.AccountModel

@{
    ViewBag.Title = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/register.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>

<body>

    <div class="overlay"></div>
    <div id="register-page" class="center-content">
        <div class="register-container">
            <h2>REGISTER</h2>

            @using (Html.BeginForm("Register", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", placeholder = "First Name" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", placeholder = "Last Name" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Email"})
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", placeholder = "Phone Number" })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password", id = "passwordInput" })
                    <div id="passwordStrength" class="text-muted"></div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    <input type="checkbox" id="showPassword" onclick="togglePasswordVisibility()"> Show Password
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(model => model.AccountType, new { @class = "form-control", placeholder = "Account Type" })
                    @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-primary btn-block">REGISTER</button>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#passwordInput').on('input', function () {
                var password = $(this).val();
                var strength = checkPasswordStrength(password);
                displayPasswordStrength(strength);
            });
        });

        function checkPasswordStrength(password) {
            if (password.length < 6) {
                return 'Weak';
            } else if (password.length < 10) {
                return 'Moderate';
            } else {
                return 'Strong';
            }
        }

        function displayPasswordStrength(strength) {
            var strengthElement = $('#passwordStrength');
            strengthElement.text('Password Strength: ' + strength);
        }

        function togglePasswordVisibility() {
            var passwordInput = document.getElementById('passwordInput');
            passwordInput.type = (passwordInput.type === 'password') ? 'text' : 'password';
        }
    </script>
</body>
</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}